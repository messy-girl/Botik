import asyncio
import logging
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command


logging.basicConfig(level=logging.INFO)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token="7178580468:AAElDlSZ_JImKOGBal8zHYjR-4ff5tIrkA4")
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
participants = []

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω! üëã\n"
                         "–ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –§–ò–û –∏ —Ç–∏–ø –∑–∞–±–µ–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á, –ø–æ–ª—É–º–∞—Ä–∞—Ñ–æ–Ω').")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
@dp.message()
async def handle_registration(message: types.Message):
    try:
        full_name, race_type = message.text.split(",")
        full_name = full_name.strip()
        race_type = race_type.strip()

        participants.append({"–§–ò–û": full_name, "–ó–∞–±–µ–≥": race_type})
        await message.answer(f"–ó–∞–ø–∏—Å—å –Ω–∞ –º–∞—Ä–∞—Ñ–æ–Ω —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞! üéâ\n"
                             f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n"
                             f"–§–ò–û: {full_name}\n"
                             f"–ó–∞–±–µ–≥: {race_type}")
    except ValueError:
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –§–ò–û –∏ —Ç–∏–ø –∑–∞–±–µ–≥–∞ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á, –ø–æ–ª—É–º–∞—Ä–∞—Ñ–æ–Ω').")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())